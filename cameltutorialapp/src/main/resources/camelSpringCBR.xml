<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"

	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="

         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">


	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">

		<property name="brokerURL" value="tcp://localhost:61616" />

	</bean>

	<camel:camelContext id="camel-client">

		<camel:template id="camelTemplate" />

	</camel:camelContext>

	<!-- CBR start here -->
	<camelContext id="camel-cbr-context" xmlns="http://camel.apache.org/schema/spring">

		<route>

			<from uri="file://C://InData" />

			<choice>
				<when>
					<simple>${header.CamelFileName} regex '^.*xml$'</simple>
					<to uri="jms:queue:xmlOrders" />
				</when>
				<when>
					<simple>${header.CamelFileName} regex '^.*(txt)$'</simple>
					<to uri="jms:queue:textOrders" />
				</when>
				<otherwise>
					<to uri="jms:queue:badOrders" />
					<stop />
				</otherwise>
			</choice>
			<to uri="jms:continuedProcessing" />

		</route>

	</camelContext>

	<!-- CBR configuration end here -->



</beans>
